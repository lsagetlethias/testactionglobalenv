name: CI Test Global Env
on:
  workflow_dispatch:

jobs:
  setenv:
    name: Set Env Variable Globaly
    runs-on: ubuntu-latest
    outputs:
      should-work: ${{ steps.setter.outputs.should-work }}
      my-secret-output: ${{ steps.setter.outputs.my-secret-output }}
      my-encoded-output: ${{ steps.setter.outputs.my-encoded-output }}

    steps:
      - uses: actions/checkout@v3
      - name: Preset no secret
        run: |
          mkdir tmp && cd tmp
          touch .env
          echo "${{ secrets.NO_SECRET }}" >> .env
      - name: DOTENV
        id: dotenv
        uses: falti/dotenv-action@v1
        with:
          path: tmp/.env
          log-variables: true
      - name: Setter
        id: setter
        run: |
          echo "simple_var=${{ steps.dotenv.outputs.simple_var }}"
          echo "should-work=v4.2" >> $GITHUB_OUTPUT
          echo "my-secret-output=${{ steps.dotenv.outputs.simple_var }}" >> $GITHUB_OUTPUT
          echo "my-encoded-output=$(echo "v4.${{ secrets.TOO_SIMPLE_SECRET }}" | base64)" >> $GITHUB_OUTPUT
      - name: Getter in same job
        run: |
          echo "still ok ? steps.dotenv.outputs.simple_var=${{ steps.dotenv.outputs.simple_var }}"
  
  getenv:
    needs: setenv
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Getter in other job
        run: |
          echo "env.simple_var=${{ env.simple_var }}"
          echo "needs.setenv.outputs.should-work=${{ needs.setenv.outputs.should-work }}"
          echo "needs.setenv.outputs.my-secret-output=${{ needs.setenv.outputs.my-secret-output }}"
          echo "needs.setenv.outputs.my-encoded-output=${{ needs.setenv.outputs.my-encoded-output }}"
          echo "DECODED needs.setenv.outputs.my-encoded-output=$(echo "${{ needs.setenv.outputs.my-encoded-output }}" | base64 -d)"
